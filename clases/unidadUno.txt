# 📚 UNIDAD 1 - INTRODUCCIÓN A BASES DE DATOS Y MYSQL

## 1.1 ¿QUÉ ES UNA BASE DE DATOS?

### 1a. Concepto de Base de Datos

**¿Qué es una base de datos?**
Imagina una base de datos como una **biblioteca digital organizada**. Así como una biblioteca tiene estantes, libros, categorías y un sistema para encontrar información rápidamente, una base de datos almacena información de manera estructurada.

**Definición formal:**
Una base de datos es un **conjunto organizado de datos** que se almacenan electrónicamente en un sistema informático, permitiendo su gestión, actualización y recuperación eficiente.

**Ejemplo práctico:**
```sql
-- Pensemos en una agenda de contactos:
-- Nombre | Teléfono | Email
-- Juan   | 123456   | juan@email.com
-- María  | 789012   | maria@email.com
```

### 1b. Diferencia entre Base de Datos Relacional y No Relacional

**Base de Datos Relacional (SQL)**
- Como una **tabla de Excel** con filas y columnas
- Datos organizados en tablas relacionadas
- Usa SQL (Structured Query Language)

**Ejemplo relacional:**
```sql
-- TABLA CLIENTES
ID | Nombre | Edad
1  | Carlos | 25
2  | Ana    | 30

-- TABLA PEDIDOS
ID | Cliente_ID | Producto
101| 1          | Laptop
102| 2          | Mouse
```

**Base de Datos No Relacional (NoSQL)**
- Como **documentos JSON** flexibles
- No requiere estructura fija
- Más flexible para datos cambiantes

**Ejemplo no relacional (JSON):**
```json
{
  "usuario": "carlos",
  "edad": 25,
  "pedidos": [
    {"producto": "Laptop", "precio": 800},
    {"producto": "Mouse", "precio": 25}
  ]
}
```

**Comparación:**
| Característica | Relacional | No Relacional |
|----------------|------------|---------------|
| Estructura     | Tablas fijas | Documentos flexibles |
| Escalabilidad  | Vertical   | Horizontal    |
| Ejemplos       | MySQL, PostgreSQL | MongoDB, Redis |

### 1c. ¿Qué es SQL? ¿Y qué es MySQL?

**SQL (Structured Query Language)**
- Es el **idioma** para hablar con bases de datos
- Como el español/inglés para comunicarse con personas
- Lenguaje estándar para gestionar bases de datos

**Ejemplo de SQL:**
```sql
SELECT nombre, edad FROM clientes WHERE edad > 25;
```

**MySQL**
- Es el **programa** que entiende el lenguaje SQL
- Como un traductor que entiende español/inglés
- Sistema de gestión de bases de datos relacional

**Analogía:**
- **SQL** = El idioma español
- **MySQL** = Una persona que habla español

## 1.2 HERRAMIENTAS PARA USAR MYSQL

### 1a. Instalación de XAMPP y Acceso a PHPMyAdmin

**Paso 1: Descargar XAMPP**
1. Ve a [https://www.apachefriends.org/](https://www.apachefriends.org/)
2. Descarga la versión para tu sistema operativo
3. Instala como cualquier programa

**Paso 2: Iniciar Servicios**
```bash
# Después de instalar:
1. Abre XAMPP Control Panel
2. Inicia Apache y MySQL
3. Deberían ponerse en verde ✅
```

**Paso 3: Acceder a PHPMyAdmin**
1. Abre tu navegador
2. Ve a: http://localhost/phpmyadmin
3. ¡Bienvenido a tu panel de control!

### 1b. Consola de Comandos vs Entorno Visual (PHPMyAdmin)

**Consola de Comandos (MySQL CLI)**
```bash
# Ejemplo de uso:
mysql -u root -p
Enter password: 
Welcome to the MySQL monitor...

mysql> SHOW DATABASES;
```

**Ventajas:**
- Más control
- Automatización con scripts
- Menos consumo de recursos

**PHPMyAdmin (Interfaz Web)**
- Interfaz gráfica amigable
- Clics en lugar de comandos
- Ideal para principiantes

**Ejemplo comparativo:**
```sql
-- CONSOLA:
CREATE DATABASE mi_tienda;

-- PHPMyAdmin:
Clic en "Nueva" → Escribir nombre → Crear
```

### 1c. Crear tu Primera Base de Datos

**Método 1: Usando PHPMyAdmin**
1. Abre http://localhost/phpmyadmin
2. Haz clic en "Nueva"
3. Escribe el nombre: `mi_primera_db`
4. Clic en "Crear"
5. ¡Listo! 🎉

**Método 2: Usando Consola**
```sql
-- Paso 1: Conectarse a MySQL
mysql -u root -p

-- Paso 2: Crear base de datos
CREATE DATABASE mi_primera_db;

-- Paso 3: Verificar creación
SHOW DATABASES;

-- Deberías ver:
+--------------------+
| Database           |
+--------------------+
| mi_primera_db      |
| information_schema |
| mysql              |
| performance_schema |
| phpmyadmin         |
| test               |
+--------------------+
```

**Método 3: Usando SQL en PHPMyAdmin**
1. Ve a la pestaña "SQL"
2. Escribe:
```sql
CREATE DATABASE escuela;
```
3. Clic en "Continuar"

## 🎯 EJERCICIOS PRÁCTICOS

### Ejercicio 1: Crear Base de Datos para Biblioteca
```sql
CREATE DATABASE biblioteca;

USE biblioteca;

CREATE TABLE libros (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100),
    autor VARCHAR(100),
    año_publicacion INT
);
```

### Ejercicio 2: Insertar Datos
```sql
INSERT INTO libros (titulo, autor, año_publicacion) VALUES
('Cien años de soledad', 'Gabriel García Márquez', 1967),
('1984', 'George Orwell', 1949),
('El Quijote', 'Miguel de Cervantes', 1605);
```

### Ejercicio 3: Consultar Datos
```sql
-- Ver todos los libros
SELECT * FROM libros;

-- Ver sólo títulos y autores
SELECT titulo, autor FROM libros;

-- Buscar libros después de 1950
SELECT * FROM libros WHERE año_publicacion > 1950;
```

## 📋 RESUMEN VISUAL

```
BASE DE DATOS
│
├── RELACIONAL (SQL)
│   ├── MySQL
│   ├── PostgreSQL
│   └── Tablas estructuradas
│
├── NO RELACIONAL (NoSQL)
│   ├── MongoDB
│   ├── Redis
│   └── Documentos flexibles
│
└── HERRAMIENTAS
    ├── XAMPP (Apache + MySQL + PHP)
    ├── PHPMyAdmin (Interfaz web)
    └── MySQL CLI (Consola)
```

## 🚀 PRÓXIMOS PASOS

Ahora que tienes tu primera base de datos creada, en la siguiente lección aprenderemos:
- Crear tablas con diferentes tipos de datos
- Insertar, actualizar y eliminar registros
- Consultas SELECT con condiciones avanzadas
